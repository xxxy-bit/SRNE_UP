import serial
import time
from src.BMS.tools.CRC16Util import calc_crc
from utils.Common import Common

if __name__ == '__main__':
    ser = serial.Serial()
    ser.port = 'COM11'
    # ser.port = input('请输入串口号（如COM10）：')
    ser.baudrate = 9600
    ser.open()
    
    # ----------------------------------------------------------------------------- #
    
    # BMS
    # P01
    # data1 = '01 03 bc 00 01 01 00 0d 36 00 01 ff 66 15 e2 00 2f 00 64 06 10 00 00 00 00 00 05 00 00 00 00 00 00 1c 2b 00 00 00 00 01 1a 00 00 00 00 00 00 00 00 00 00 12 63 27 10 00 00 00 01 00 00 00 00 0d 7d 0d 7c 0d 23 0d ab 0d dc 0d 6c 0d a7 0d a1 0d be 0d 28 0e 0a 0e db 0d 91 0e 72 0d 66 0d 14 0d a9 01 c7 0e db 0d 14 00 10 00 0c 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 18 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00'
    
    # data1 = '01 03 bc 18 01 03 10 38 06 00 08 05 44 14 d9 00 62 00 64 06 08 00 22 00 00 00 00 00 00 00 00 00 00 23 e9 00 01 00 00 2f 0c 00 00 00 00 00 00 00 00 00 00 24 67 24 db 00 04 00 01 00 00 00 00 0d 07 0d 08 0d 0e 0d 0b 0d 0d 0d 0b 0d 0b 0d 0b 0d 0f 0d 0c 0d 0c 0d 0c 0d 0c 0d 0a 0d 0c 0d 08 0d 0b 00 08 0d 0f 0d 07 00 01 00 09 00 00 01 22 01 22 01 22 01 22 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 01 22 01 22 01 22 00 00 00 00 01 22 fe 70 fe 70 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00'
    
    # data1 = '01 03 bc 00 01 01 00 0d 36 00 01 ff 66 15 e2 00 2f 00 64 06 10 00 00 00 00 00 05 00 00 00 00 00 00 1c 2b 00 00 00 00 01 1a 00 00 00 00 00 00 00 00 00 00 12 63 27 10 00 00 00 01 00 00 00 00 0d 7d 0d 7c 0d 23 0d ab 0d dc 0d 6c 0d a7 0d a1 0d be 0d 28 0e 0a 0e db 0d 91 0e 72 0d 66 0d 14 0d a9 01 c7 0e db 0d 14 00 10 00 0c 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 18 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00'
    
    # 全状态
    data1 = '01 03 c0 00 01 01 00 0f 05 00 01 ff 66 15 d7 00 2f 00 64 06 d8 00 22 00 ff ff ff 00 03 ff ff 00 0f 1c 2b 00 00 00 00 01 34 00 00 00 00 00 00 00 00 00 00 12 60 27 10 00 00 00 01 00 00 00 00 0d 8e 0d 7b 0d 22 0d a8 0d d4 0d 6b 0d a4 0d 9f 0d ba 0d 28 0d fc 0e be 0d 8f 0e 58 0d 65 0d 14 0d a5 01 aa 0e be 0d 14 00 10 00 0c 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 22 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01'
    
    # 无状态
    # data1 = '01 03 c0 00 01 01 00 0f 05 00 01 ff 66 15 d7 00 2f 00 64 06 d8 00 22 00 ff ff ff 00 03 ff ff 00 0f 1c 2b 00 00 00 00 01 34 00 00 00 00 00 00 00 00 00 00 12 60 27 10 00 00 00 01 00 00 00 00 0d 8e 0d 7b 0d 22 0d a8 0d d4 0d 6b 0d a4 0d 9f 0d ba 0d 28 0d fc 0e be 0d 8f 0e 58 0d 65 0d 14 0d a5 01 aa 0e be 0d 14 00 10 00 0c 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 22 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01'
    
    
    data_beep = '01 03 02 00 01'
    
    
    bc_split1 = '01 03 bc 00 01 01 00 0d 36 00 01 ff 66 15 e2 00 2f 00 64 06 10 00 00 00 00 00 05 00 00 00 00 00 00 1c 2b 00 00 00 00 01 1a 00 00 00 00 00 00 00 00 00 00 12 63 27 10 00 00 00 01 00 00 00 00 0d 7d 0d 7c 0d 23 0d ab 0d dc 0d 6c 0d a7 0d a1 0d be 0d 28 0e 0a 0e db 0d 91 0e 72 0d 66 0d 14 0d'
    bc_split2 = 'c1 a9 01 c7 0e db 0d 14 00 10 00 0c 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 18 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 b5 46'
    bc_split3 = 'a9 01 c7 0e db 0d 14 00 10 00 0c 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 18 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 b5 46'
    
    # data1_test = '01 03 bc 17 0b 0e 0a 09 2b 00 02 00 00 15 6e 00 00 00 64 00 04 00 08 00 00 00 81 00 00 00 00 00 00 00 00 00 03 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00 27 10 00 00 00 01 00 00 00 00 0d 69 0d 73 0d 3c 0d 76 0d 75 0d 58 0d 67 0d 63 0d 69 0d 74 0d 62 0d 62 0d 6b 0d b2 0e 06 0c 2f 0d 61 01 d7 0e 06 0c 2f 00 10 00 0f 00 00 00 fa 00 fa 00 fa 00 fa ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00 fa 00 fa 00 fa 00 00 00 00 01 22 00 fa 00 fa 00 00 00 00 01 18 01 2c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00'
    
    data3 = '01 03 42 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004'
    data4 = '01 03 AC 0010 0011 0012 0013 0014 0015 0007 0008 0009 0010 0011 0012 0013 0014 0015 0010 0011 0012 0013 0014 0015 0007 0008 0009 0010 0011 0012 0013 0014 0015 0010 0011 0012 0013 0014 0015 0007 0008 0009 0010 0011 0012 0013 0014 0015 0010 0011 0012 0013 0014 0015 0007 0008 0009 0010 0011 0012 0013 0014 0015 0010 0011 0012 0013 0014 0015 0007 0008 0009 0010 0011 0012 0013 0014 0015 0010 0011 0012 0013 0014 0015 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004'

    # P03
    data_03 = '01 03 b6 0001 0002 0003 0004 0005 0006 0007 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 000a 000b 000c 000d 000e 000f 0001'

    data_03_test =       '01 03 b6 16 30 03 e8 15 e0 16 d0 15 90 03 e8 0d de 03 e8 0d ac 0e 42 0d 7a 07 d0 12 70 03 e8 13 10 11 80 13 10 07 d0 0b 86 03 e8 0b ea 0a f0 07 d0 0b ea 52 08 03 e8 4e 20 55 f0 03 e8 75 30 01 f4 00 0a 4e 20 0b b8 00 01 52 08 03 e8 4e 20 55 f0 27 10 75 30 03 e8 00 0a 7d 00 01 f4 00 03 02 58 02 26 02 8a 02 58 02 58 02 26 02 8a 02 58 00 00 00 32 ff 9c ff ce ff 6a ff 9c ff 38 ff 6a 03 e8 03 b6 04 4c 03 b6 03 84 03 52 03 e8 03 b6 02 8a 02 58 02 bc 02 58 ff 6a 00 00 ff 38 ff 6a 00 03 0d 7a 00 32 00 c8 03 e8 01 f4 15 e0 00 c8 0c 4e 00 3c 00 30 00 0a 00 0a'
    data_03_crush_test = '01 03 B6 05 8C 03 E8 05 78 05 B4 05 64 03 E8 0D DE 03 E8 0D AC 0E 42 0D 7A 07 D0 04 88 03 E8 04 C4 04 60 04 C4 07 D0 0B 54 03 E8 0B EA 0A F0 07 D0 0B EA 65 90 03 E8 61 A8 6B 6C 07 D0 92 7C 01 F4 00 0F 65 90 0B B8 00 01 65 90 03 E8 61 A8 6B 6C 27 10 92 7C 03 E8 00 0A C3 50 01 2C 00 03 02 58 02 26 02 BE 02 58 02 58 02 26 02 8A 02 58 00 00 00 32 FF 9C FF CE FF 6A FF 9C FF 38 FF 6A 03 E8 03 B6 04 4C 03 B6 03 84 03 52 03 E8 03 B6 02 8A 02 58 02 BC 02 58 FF 6A 00 00 FF 38 FF 6A 00 03 0D 7A 00 32 00 14 03 E8 01 F4 05 78 03 E8 0C 4E 00 3C 00 30 00 0A 00 0B'

    # P06
    data_06 = '01 03 6C 0001 0002 0003 0004 0005 0006 FFF7 3FFF FFFF FFFF 000F FFFF 0003 00FF 000f 0001 0002 0003 0004 0005 0006 FFF7 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 FFF7 0008 0009 000a 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 FFF7 0008 0009'
    
    # data_07 = '01 03 02 0000'
    data_07 = '01 03 02 002a'
    
    data_08 = '01 03 04 01 02 21 33'
    
    # 0103031800038588
    data_cap1 = '01 03 04 3D59 7AA8'
    # data_cap1 = '01 03 06 024d 0529 0003'
    # data_cap1 = '01 03 06 0001 0002 0003'
    
    # 01034000000191ca
    data_cap2 = '01 03 02 0001 '
    
    # 系统时间 2023/5/20 23:56:50
    data_sysTime = '01 03 06 17 05 14 17 38 32'
    
    # 选择协议
    data_pro = '01 03 02 0b 02'

    # ----------------------------------------------------------------------------- #
    
    # bms rs485
    data_pal2_check = '7E 32 35 30 32 34 36 30 30 45 30 30 32 30 32'
    data_pal5_check = '7E 32 35 30 35 34 36 30 30 45 30 30 32 30 32'
    
    # data_pal2_start_pack = '7E 32 35 30 32 34 36 30 30 45 30 38 41 30 30 30 32 31 30 30 43 46 39 30 43 45 37 30 43 35 44 30 43 39 39 30 43 44 39 30 43 45 37 30 43 45 30 30 43 45 34 30 43 45 36 30 43 45 39 30 43 45 30 30 43 45 38 30 43 45 37 30 43 44 46 30 46 30 46 30 43 45 37 30 39 30 30 46 41 30 30 46 41 30 31 30 34 30 31 32 43 30 31 30 34 30 30 46 41 30 30 46 41 30 30 46 41 30 30 46 41 46 46 46 45 31 34 42 36 30 30 30 35 30 32 30 34 42 30 30 30 30 30 30 34 42 30 30 30 30 30 44 46 30 34 0D'
    # data_pal2_start_pack = '7e 32 35 30 31 34 36 30 30 45 30 38 41 30 30 30 31 31 30 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 44 34 38 30 39 30 30 31 42 30 30 31 41 30 30 31 41 30 30 31 41 30 30 31 45 30 30 31 39 30 30 31 39 30 30 31 44 30 30 31 45 46 46 46 46 43 44 42 34 41 31 32 30 30 33 34 32 34 30 30 30 30 30 34 32 34 30 30 30 33 32 45 30 33 32 0d'
    # data_pal2_start_pack = '7e 32 35 30 32 34 36 30 30 45 30 38 41 30 30 30 32 31 30 30 43 37 39 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 30 30 44 30 30 30 39 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 42 46 45 36 41 46 45 36 41 30 30 31 39 30 30 31 45 30 30 30 30 30 32 31 32 31 33 38 34 30 34 32 37 31 30 30 30 30 30 32 37 31 30 30 30 33 31 45 31 39 34 0d'
    # data_pal2_start_warrn = '7E 32 35 30 32 34 36 30 30 39 30 35 32 30 30 30 32 31 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 30 30 30 39 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 30 30 32 30 32 30 31 30 30 30 34 30 30 30 30 30 30 30 30 30 31 38 30 45 45 31 30 0D'
    
    # 3030
    # data_pal1_start_pack = '7e 32 35 30 31 34 36 30 30 45 30 38 41 30 30 30 31 31 30 30 43 37 39 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 30 30 44 30 30 30 39 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 42 46 45 36 41 46 45 36 41 30 30 31 39 30 30 31 45 30 30 30 30 30 32 31 32 31 33 38 34 30 34 32 37 31 30 30 30 30 30 32 37 31 30 30 30 33 31 45 31 39 34 0d'
    # data_pal1_start_warrn = '7E 32 35 30 31 34 36 30 30 39 30 35 32 30 30 30 31 31 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 30 30 30 39 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 30 30 32 30 32 30 31 30 30 30 34 30 30 30 30 30 30 30 30 30 31 38 30 45 45 31 30 0D'
    
    # 4244 电压16，温度9
    # data_pal1_start_pack = '7e 32 35 30 31 34 36 34 32 45 30 38 41 30 30 30 31 31 30 30 43 37 39 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 30 30 44 30 30 30 39 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 42 46 45 36 41 46 45 36 41 30 30 31 39 30 30 31 45 30 30 30 30 30 32 31 32 31 33 38 34 30 34 32 37 31 30 30 30 30 30 32 37 31 30 30 30 33 31 45 31 39 34 0d'
    # data_pal1_start_warrn = '7E 32 35 30 31 34 36 34 34 39 30 35 32 30 30 30 31 31 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 30 30 30 39 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 30 30 32 30 32 30 31 30 30 30 34 30 30 30 30 30 30 30 30 30 31 38 30 45 45 31 30 0D'
    
    # 4244 电压15，温度8
    # data_pal1_start_pack = '7e 32 35 30 31 34 36 30 30 45 30 38 41 34 32 30 31 30 46 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 30 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 31 30 44 30 30 30 44 30 30 30 38 30 30 31 38 30 30 31 38 30 30 31 38 30 30 31 42 46 45 36 41 46 45 36 41 30 30 31 39 30 30 31 45 30 30 30 30 30 32 31 32 31 33 38 34 30 34 32 37 31 30 30 30 30 30 32 37 31 30 30 30 33 31 45 31 39 34 0d'
    # data_pal1_start_warrn = '7E 32 35 30 31 34 36 30 30 39 30 35 32 34 34 30 31 30 46 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 30 30 30 38 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 30 30 32 30 32 30 31 30 30 30 34 30 30 30 30 30 30 30 30 30 31 38 30 45 45 31 30 0D'
    
    # data_pal2_start_pack = '7e 32 35 30 32 34 36 30 30 41 30 30 36 30 30 30 32 30 30 46 43 37 34 0d'
    # data_pal2_start_warrn = '7e 32 35 30 32 34 36 30 30 41 30 30 36 30 30 30 32 30 30 46 43 37 34 0d'
    
    data_pal1_start_pack = '7e 32 35 30 31 34 36 30 30 31 30 35 41 34 32 30 31 30 34 30 43 34 30 30 43 34 35 30 43 34 32 30 43 34 39 30 39 30 31 30 31 30 31 30 31 30 31 30 32 30 31 30 30 30 31 30 45 46 45 37 30 46 45 37 30 30 31 30 44 30 30 30 30 46 46 42 30 30 34 45 36 37 33 43 46 30 34 37 41 41 38 30 30 30 31 37 41 41 38 30 30 35 45 45 41 38 46 0d'
    data_pal1_start_warrn = '7e 32 35 30 31 34 36 30 30 33 30 33 41 34 34 30 31 30 34 30 30 30 30 30 30 30 30 30 39 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 36 30 30 30 30 30 30 30 30 30 30 30 30 46 32 39 42 0d'

    data_pal2_start_pack = '7e 32 35 30 32 34 36 30 30 31 30 35 41 34 32 30 32 30 34 30 44 32 30 30 44 30 41 30 44 32 39 30 44 35 34 30 39 30 30 41 41 30 30 41 41 30 30 41 41 30 30 41 41 30 31 31 30 46 45 37 30 46 45 37 30 30 31 30 45 30 30 30 30 30 30 46 30 30 35 34 34 33 42 35 41 30 34 38 30 45 38 30 30 30 30 38 30 45 38 30 30 32 45 45 41 37 33 0d'
    data_pal2_start_warrn = '7e 32 35 30 32 34 36 30 30 33 30 33 41 34 34 30 32 30 34 30 30 30 30 30 30 30 30 30 39 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 45 30 30 30 30 30 30 30 30 30 30 30 30 46 32 38 38 0d'
    
    # data_pal2_start_pack = '7e 32 35 30 32 34 36 30 30 41 30 30 36 30 30 30 32 30 30 46 43 37 34 0d'
    # data_pal2_start_warrn = '7e 32 35 30 32 34 36 30 30 41 30 30 36 30 30 30 32 30 30 46 43 37 34 0d'
    
    data_pal3_start_pack = '7e 32 35 30 33 34 36 30 30 41 30 30 36 30 30 30 32 30 30 46 43 37 34 0d'
    data_pal3_start_warrn = '7e 32 35 30 33 34 36 30 30 41 30 30 36 30 30 30 32 30 30 46 43 37 34 0d'
    
    # 4244 电压16，温度9
    # data_pal3_start_pack = '7E 32 35 30 33 34 36 34 32 45 30 38 41 30 30 30 33 31 30 30 43 46 39 30 43 45 37 30 43 35 44 30 43 39 39 30 43 44 39 30 43 45 37 30 43 45 30 30 43 45 34 30 43 45 36 30 43 45 39 30 43 45 30 30 43 45 38 30 43 45 37 30 43 44 46 30 46 30 46 30 43 45 37 30 39 30 30 46 41 30 30 46 41 30 31 30 34 30 31 32 43 30 31 30 34 30 30 46 41 30 30 46 41 30 30 46 41 30 30 46 41 46 46 46 45 31 34 42 36 30 30 30 35 30 32 30 34 42 30 30 30 30 30 30 34 42 30 30 30 30 30'
    # data_pal3_start_pack = f'{data_pal3_start_pack}{Common.rs485_chksum(data_pal3_start_pack)}0d'
    # data_pal3_start_warrn = '7E 32 35 30 33 34 36 34 34 39 30 35 32 30 30 30 33 31 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 30 30 30 39 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 30 30 32 30 32 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46'
    # data_pal3_start_warrn = f'{data_pal3_start_warrn}{Common.rs485_chksum(data_pal3_start_warrn)}0d'
    
    # 4244 电压15，温度8
    # data_pal3_start_pack = '7E 32 35 30 33 34 36 30 30 45 30 38 41 34 32 30 33 30 46 30 43 45 37 30 43 35 44 30 43 39 39 30 43 44 39 30 43 45 37 30 43 45 30 30 43 45 34 30 43 45 36 30 43 45 39 30 43 45 30 30 43 45 38 30 43 45 37 30 43 44 46 30 46 30 46 30 43 45 37 30 38 30 30 46 41 30 31 30 34 30 31 32 43 30 31 30 34 30 30 46 41 30 30 46 41 30 30 46 41 30 30 46 41 46 46 46 45 31 34 42 36 30 30 30 35 30 32 30 34 42 30 30 30 30 30 30 34 42 30 30 30 30 30'
    # data_pal3_start_pack = f'{data_pal3_start_pack}{Common.rs485_chksum(data_pal3_start_pack)}0d'
    # data_pal3_start_warrn = '7E 32 35 30 33 34 36 30 30 39 30 35 32 34 34 30 33 30 46 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 32 30 30 30 38 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 32 30 30 30 32 30 32 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46 46'
    # data_pal3_start_warrn = f'{data_pal3_start_warrn}{Common.rs485_chksum(data_pal3_start_warrn)}0d'
    
    # 获取电池系统运行模拟量信息
    # data_pal4_sys_total = '7E 32 35 30 31 34 36 30 30 34 30 36 36 36 31 30 31 30 35 33 46 30 30 30 30 32 44 30 30 30 30 30 30 30 30 36 34 36 34 30 44 35 34 30 30 30 32 30 44 30 37 30 30 30 31 30 30 44 42 30 31 30 45 30 30 30 31 30 30 41 41 30 30 30 32 30 30 39 30 30 31 32 32 30 30 30 31 30 30 30 30 30 30 30 31 30 31 32 35 30 31 32 37 30 30 30 32 30 31 32 33 30 30 30 31 45 39 36 37 0D'
    data_pal4_sys_total = '7e 32 35 30 31 34 36 30 30 30 30 36 41 36 31 30 31 30 34 46 38 46 46 46 46 46 46 42 30 35 45 30 30 30 31 30 30 30 31 30 30 30 30 30 43 37 33 30 30 30 31 30 43 37 30 30 30 30 31 30 30 30 30 30 31 30 45 30 30 30 31 30 31 30 45 30 30 30 31 30 31 31 37 30 31 31 37 30 30 30 30 30 31 31 37 30 30 30 30 30 31 31 44 30 31 31 44 30 30 30 30 30 31 31 44 30 30 30 30 45 38 31 37 0d'
    
    # --------------------------------------- #
    
    # ac实时监控1
    ac_msg1 = 'ff 03 be 3001 0032 4558 542d 4943 3132 2d32 4b57 2d41 5520 0011 0012 0003 0014 000a 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005'
    # ac实时监控2
    # ac_msg2 = 'ff 03 0e 0001 0002 8103 0004 0001 ffff ffff'
    # ac_msg2 = 'FF 03 46 00 64 00 8F 01 19 2D 19 00 00 00 00 00 00 00 01 00 00 00 28 00 00 00 09 00 92 09 D8 00 00 0D 7C 00 00 00 02 00 00 01 10 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 01 10 00 00 00 00 00 04 00 00 00 00'
    ac_msg2 = 'FF 03 46 00 64 00 90 00 00 21 19 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 91 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 09 ff ff ff ff'
    # ac参数设置
    ac_setting = 'ff 03 74 09c4 00c8 300c 00 02 00 a0 00 9b 00 92 00 90 00 8a 00 84 00 7e 00 78 00 6f 00 6a 64 32 00 05 00 3c 00 78 00 07 00 00 00 46 00 a3 00 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01 00 14 00 64 00 01 00 84 00 7d 00 00 00 78 00 7d 00 78'
    
    # --------------------------------------- #
    
    # 产品信息区
    ivpo_msg1 = 'ff 03 c4 3001 0005 4558 542d 4943 3132 2d32 4b57 2d41 5520 0011 0012 0003 0014 000F 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008'
    
    # 总运行天数
    ivpo_tday = 'ff 03 02 00 01'
    
    # 控制区数据区
    ivpo_msg2 = 'ff 03 08 0001 0002 0003 0004'
    
    # 逆变数据区
    ivpo_msg3 = 'ff 03 50 0000 0000 0f00 0fff 4943 3132 2d32 4b57 3020 5520 0011 0012 0003 0014 000F 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010'
    
    # 用户设置区1
    ivpo_msg4 = 'FF 03 40 01F4 00C8 000C 0003 00A0 0096 0092 0090 008A 0084 007E 0078 006F 006A 0000 0005 0078 0078 001E 0005 0000 0000 0000 0000 0000 0000 0096 0000 0000 0000 0000 0000'
    
    # 数据校准成功
    ivpo_msg5 = 'FF70010100010000'
    # 数据校准失败
    ivpo_msg6 = 'FF70010100020000'
    
    # --------------------------------------- #
    
    dc_msg1 = 'ff 03 be 3001 0032 4558 542d 4943 3132 2d32 4b57 2d41 5520 0011 0012 0003 0014 000F 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015 0001 0002 0003 0004 0005'
    
    dc_control = 'ff 03 56 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 000b 000c 000d 000e 000f 0001 0002 0003 0080 607f 0006 0007 0008 0009 0010 000b 000c 000d'
    
    dc_setting = 'ff 03 7a 0001 0002 1818 0000 0005 0006 0007 0008 0009 0010 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 000b 000c 000d 000e 000f 0001 0002 0003 0004 0005 0006 0000 0008 0009 0001 000b 000c 000d 0001 0002 0002'
    
    dc_setting_get_chg = 'ff 03 02 0001'
    
    # dc_setting = 'FF 03 7A 0B AE 00 C7 0C 0C 00 00 00 A0 00 A0 00 9C 00 96 00 94 00 A0 00 7E 00 8C 00 6F 00 1E 64 32 00 05 00 78 00 78 00 1D 00 00 00 46 00 A3 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 3A 00 00 00 00 00 00 00 00 00 84 00 7F 00 01 00 7A 00 7D 00 78 00 00 00 00 00 00'
    
    # ------------------Test Other--------------------- #
    
    return_msg = 'ff 03 0c 3834 4336 3932 3133 3944 4243 c6a5'
    return_cu2_msg = 'f9 03 0c 4434 4241 4241 3730 3033 3735 5739'
    # return_msg = 'ff 03 0c 0b0d 0103 0508 060a 0809 010f 8170'
    return_msg_01 = '01 03 0c 0b0d 0103 0508 060a 0809 010f 4a5c'
    
    # ------------------Test Other--------------------- #
    
    ac = False
    ivpo = False
    bms = True
    dc = False
    test = False
    
    bms_timer = 1
    
    if ac:
        while True:
            time.sleep(0.5)
            res = ser.read_all().hex()
            if res != '':
                print(res)
                if res == 'ff03000a005f' + calc_crc('ff03000a005f'):
                    ser.write(bytearray.fromhex(ac_msg1 + calc_crc(ac_msg1)))
                elif res == 'ff0301000023' + calc_crc('ff0301000023'):
                    ser.write(bytearray.fromhex(ac_msg2 + calc_crc(ac_msg2)))
                elif res == 'ff03e001003a' + calc_crc('ff03e001003a'):
                    ser.write(bytearray.fromhex(ac_setting + calc_crc(ac_setting)))
    elif ivpo:
        while True:
            time.sleep(0.5)
            res = ser.read_all().hex()
            if res != '':
                print(res)
                if res == 'ff03000a0062f1ff':
                    ser.write(bytearray.fromhex(ivpo_msg1 + calc_crc(ivpo_msg1)))
                elif res == 'ff03f0310001f31b':
                    ser.write(bytearray.fromhex(ivpo_tday + calc_crc(ivpo_tday)))
                elif res == 'ff0301000004502b':
                    ser.write(bytearray.fromhex(ivpo_msg2 + calc_crc(ivpo_msg2)))
                elif res == 'ff03020400281073':
                    ser.write(bytearray.fromhex(ivpo_msg3 + calc_crc(ivpo_msg3)))
                elif res == 'ff03e001002037cc':
                    ser.write(bytearray.fromhex(ivpo_msg4 + calc_crc(ivpo_msg4)))
                elif res == 'ff70021600000006b6eb':
                    ser.write(bytearray.fromhex(ivpo_msg5 + calc_crc(ivpo_msg5)))
    elif bms:
        while True:
            time.sleep(0.5)
            res = ser.read_all().hex()
            if res != '':
                print(res)
                if res == '01030300006045a6':
                    ser.write(bytearray.fromhex(data1 + calc_crc(data1)))
                    # if bms_timer == 1:
                    #     ser.write(bytearray.fromhex(bc_split1))
                    #     bms_timer += 1
                    # # elif bms_timer == 2:
                    # #     ser.write(bytearray.fromhex(bc_split2))
                    # #     bms_timer += 1
                    # else:
                    #     ser.write(bytearray.fromhex(bc_split3))
                    #     bms_timer = 1
                elif res == '01032007005bbe30':
                    # ser.write(bytearray.fromhex(data_03_test + calc_crc(data_03_test)))
                    ser.write(bytearray.fromhex(data_03_crush_test + calc_crc(data_03_crush_test)))
                    
                elif res == '010330010001daca':
                    ser.write(bytearray.fromhex(data_beep + calc_crc(data_beep)))
                    
                elif res == '0103f0000001b70a':
                    ser.write(bytearray.fromhex(data_07 + calc_crc(data_07)))
                elif res == '010300140002840f':
                    ser.write(bytearray.fromhex(data_08 + calc_crc(data_08)))
                elif res == '0103031800024448':
                    ser.write(bytearray.fromhex(data_cap1 + calc_crc(data_cap1)))
                elif res == '01034000000191ca':
                    ser.write(bytearray.fromhex(data_cap2 + calc_crc(data_cap2)))
                elif res == '010303000003058f':
                    ser.write(bytearray.fromhex(data_sysTime + calc_crc(data_sysTime)))
                elif res == '0103001b0001f40d':
                    ser.write(bytearray.fromhex(data_pro + calc_crc(data_pro)))
                elif res[:5] == '0103f':
                    ser.write(bytearray.fromhex(data_06 + calc_crc(data_06)))
                elif res == '7e323530323436393030303030464441340d':
                    ser.write(bytearray.fromhex(data_pal2_check + Common.rs485_chksum(data_pal2_check) + '0d'))
                elif res == '7e323530353436393030303030464441310d':
                    ser.write(bytearray.fromhex(data_pal5_check + Common.rs485_chksum(data_pal5_check) + '0d'))
                elif res == '7e3235303134363432453030323031464433300d':
                    ser.write(bytearray.fromhex(data_pal1_start_pack))
                elif res == '7e3235303134363434453030323031464432450d':
                    ser.write(bytearray.fromhex(data_pal1_start_warrn))
                elif res == '7e3235303234363432453030323032464432450d':
                    ser.write(bytearray.fromhex(data_pal2_start_pack))
                elif res == '7e3235303234363434453030323032464432430d':
                    ser.write(bytearray.fromhex(data_pal2_start_warrn))
                elif res == '7e3235303334363432453030323033464432430d':
                    ser.write(bytearray.fromhex(data_pal3_start_pack))
                elif res == '7e3235303334363434453030323033464432410d':
                    ser.write(bytearray.fromhex(data_pal3_start_warrn))
                elif res == '7e3235303134363631453030323031464432460d':
                    ser.write(bytearray.fromhex(data_pal4_sys_total))
    elif dc:
        while True:
            # time.sleep(0.5)
            res = ser.read_all().hex()
            if res != '':
                print(res)
                if res == 'ff03000a005f' + calc_crc('ff03000a005f'):
                    ser.write(bytearray.fromhex(dc_msg1 + calc_crc(dc_msg1)))
                elif res == 'ff030100002b' + calc_crc('ff030100002b'):
                    ser.write(bytearray.fromhex(dc_control + calc_crc(dc_control)))
                elif res == 'ff03e001003d' + calc_crc('ff03e001003d'):
                    ser.write(bytearray.fromhex(dc_setting + calc_crc(dc_setting)))
                elif res == 'ff03df000001' + calc_crc('ff03df000001'):
                    ser.write(bytearray.fromhex(dc_setting_get_chg + calc_crc(dc_setting_get_chg)))
    elif test:
        while True:
            time.sleep(0.5)
            # res = ser.read_all()
            res = ser.read_all().hex()
            if res != '':
                print(res)
                if res == 'ff0300210006801c':
                    ser.write(bytearray.fromhex(return_msg))
                elif res == 'f90300210006807a':
                    ser.write(bytearray.fromhex(return_cu2_msg))
                elif res == '0103000f0006f5cb':
                    print(111)
                    ser.write(bytearray.fromhex(return_msg_01))
        